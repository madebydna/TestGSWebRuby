# Prerequisites

  * A mac
  * Terminal knowledge
  * homebrew installed
  * gswebruby git repository cloned from githost

# Setup instructions

  * Install Docker (Mac)
    * Unfortunately a login is required. Sign up for an account on docker.com if you don't already have one
    * Download Docker Desktop (Docker Community Edition for Mac) (500MB) from https://store.docker.com/editions/community/docker-ce-desktop-mac
    * Install and execute. Log in to docker from the app
  * Open docker for Mac. In the preferences pane:
    * Find the advanced tab, and enter 172.17.0.0 into the Docker subnet. Save the settings
    * Also, under the Daemon tab, click advanced and enter the following JSON snippet and save
      {
        "debug" : true,
        "experimental" : true,
        "bip" : "10.11.12.1/24"
      }
  * Install docker-sync from command line
    * gem install docker-sync
  * Start the docker containers
    * docker-sync-stack start # It will take much longer the first time... maybe 15+ minutes depending internet etc.
  * Test in browser
    * You should be able to reach the site at http://localhost:3000


# Helpful commands
  * To stop the containers
    * ctrl^c
  * To start up the containers
    * docker-sync-stack start
  * To "restart" the containers and volumes
    * docker-sync-stack clean
    * docker-sync-stack start
  * To bundle install
    * Simply follow the restart instructions above
      * docker-sync-stack clean
      * docker-sync-stack start
  * To install new npm packages
    * docker-compose run frontend npm install
  * To run rspec tests:
    * docker-compose run rails rspec <relative path to the spec file or directory>
  * To run all js tests
    * docker-compose run frontend npm run test
  * To log into one of the docker containers (db, rails, frontend)
    * docker-compose run db bash
    * docker-compose run rails bash
    * docker-compose run frontend bash
  * To rebuild the docker images if the Dockerfile changes, or new packages need to be installed, etc:
    * docker-compose build <service name>
    * e.g...
      * docker-compose build db
      * docker-compose build rails
      * docker-compose build frontend


# Helpful context

  * What is docker-sync?
    * docker handle file syncing and volume management between containers out of the box. However, it can be quite slow.
      docker-sync is a separate piece of software which is used to create and manage a volume that is marked as "external" in docker.
      docker-sync uses a more efficient syncing strategy (unison on mac) between the code on your host machine and the docker container
    # docker-sync comes with the docker-sync-stack commands which just set up the docker-sync volume and then start up docker-compose
  * How do I know where the files live?
    * Files are copied/synced from your Mac into the docker containers. The details of this are all configured in docker-compose.yml
    * Files within the containers are stored under /srv. e.g. /srv/frontend and /srv/rails
  
