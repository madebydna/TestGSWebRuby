# Use this file to configure the Overcommit hooks you wish to use. This will
# extend the default configuration defined in:
# https://github.com/brigade/overcommit/blob/master/config/default.yml
#
# At the topmost level of this YAML file is a key representing type of hook
# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can
# customize each hook, such as whether to only run it on certain files (via
# `include`), whether to only display output if it fails (via `quiet`), etc.
#
# For a complete list of hooks, see:
# https://github.com/brigade/overcommit/tree/master/lib/overcommit/hook
#
# For a complete list of options that you can use to customize hooks, see:
# https://github.com/brigade/overcommit#configuration
#
# Uncomment the following lines to make the configuration take effect.
#
##########################################################################
# To INSTALL Overcommit locally and activate githooks do the following:
# 1. gem install overcommit
# 2. overcommit --sign 
# #######################################################################
#
# Currently the only hooks activated are standard basic commit message hooks and
# the rubocop precommit hook.
#
# #####################################################################

PreCommit:
 RuboCop:
   enabled: true
   required_executable: './bin/rubocop'
   command: ['bundle', 'exec', 'rubocop']
   install_command: 'bundle install'
   flags: ['--format=emacs', '--force-exclusion', '--display-cop-names', '--fail-level=C']
   problem_on_unmodified_line: ignore
   on_warn: fail
   # levels:
   # refactor convention warning error fatal
   # R: :refactor, C: :convention, W: :warning, E: :error, F: :fatal
PostCheckout:
  ShouldBundleInstall:
    enabled: true
    quiet: false
PostMerge:
  ShouldBundleInstall:
    enabled: true
    quiet: false
