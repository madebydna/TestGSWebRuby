<!--this is its own partial and gets executed once per questions from above-->
<!--if current school_user exists and has answered questions for school and has no role then show role question-->
<!--and hide-->
<% question = ReviewQuestionDecorator.decorate(question) %>
<% submitted_review = @school_user.find_by_question(question) if @school_user %>
<% submitted_review = SchoolProfileReviewDecorator.decorate(submitted_review) if submitted_review %>

<div
id='<%= "question-topic#{question.topic.id}" %>'
class="link-down-compensate bg-light-gray gray-box-border-v row limit-width-1200 js-topicalReviewContainer dn"
data-review-topic="<%= question.review_topic.id %>">
  <% if submitted_review %>
      <%= render "school_profile/reviews/modules/output/submitted_review_module", question: question,
                                                                          submitted_review: submitted_review
      %>
  <% end %>

  <div class="js-reviewFormContainer <%= submitted_review ? 'dn' : '' %> ">
    <%= form_for Review.new, url: school_reviews_path(@school),
                 html: {'data-parsley-validate' => '',
                        'data-parsley-excluded' => 'input[type=button],
                        input[type=submit], input[type=reset]'} do |f| %>
        <%= f.hidden_field :state, value: @school.state %>
        <%= f.hidden_field :school_id, value: @school.id %>
        <%= f.hidden_field :review_question_id, value: question.id %>

        <%= render "school_profile/reviews/modules/input/#{question.layout}_module", question: question,
                                                                             f: f,
                                                                             submitted_review: submitted_review
        %>
    <% end %>
  </div>
</div>
