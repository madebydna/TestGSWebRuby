<% reviews %>
<% summary = reviews.summary %>

<% initial_size = 3 %>
<a name="Reviews"></a>

<div class="review-summary rs-review-summary">
  <div class="review-sumary__info">
    <span class="number-of-reviews">
      <span class="count"><%= summary.number_of_reviews %></span>
      <span class="label"><%= summary.number_of_reviews_label %></span>
    </span>
    <%= render 'five_stars', filled: summary.average_five_star_rating %>
  </div>
  <div class="review-summary__distribution">
  </div>
</div>

<div class="review-list">
  <%# render partial: "review", collection: reviews.reviews_list, as: :user_reviews %>
  <% rs = [] %>
  <% reviews.reviews_list.each do |user_reviews| %>
    <% rs << {
        fiveStarReview: { 
          comment: user_reviews.five_star_review.try(:comment),
          topicLabel: user_reviews.five_star_review ? SchoolProfileReviewDecorator.decorate(user_reviews.five_star_review).topic_label : nil
        },
        fiveStarReviewRating: user_reviews.five_star_review ? SchoolProfileReviewDecorator.decorate(user_reviews.five_star_review).star_rating : nil,
        topicalReviews: user_reviews.topical_reviews.map { |r| {comment: r.comment, answerLabel: r.answer_label, answer: r.answer.downcase.gsub(' ', '-')  } },
        mostRecentDate: user_reviews.most_recent_date,
        userTypeLabel: user_reviews.user_type_label,
        avatar: user_reviews.avatar
      }
    %>
  <% end %>

  <%= react_component('ReviewsList', reviews: rs) %>
</div>

