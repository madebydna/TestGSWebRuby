<% score %>
<% state_score %>
<% range ||= (0..100) %>
<% min_value = range.min %>
<% max_value = range.max %>
<% score_percentage = 100.0 * ((score.to_f - min_value) / (max_value - min_value)) %>

<% state_average_percentage = 100.0 * ((state_score.to_f - min_value) / (max_value - min_value)) %>
<% score_rating = (score_percentage / 10.0).truncate + 1 %>
<% score_rating = [10, score_rating].min # 100% gets an 11 per previous line %>

<% if (0..100).cover?(score_percentage) && (1..10).cover?(score_rating) && !score.nil? %>
  <div class="person-bar-viz">
    <div class="person-progress">
      <% if (0..100).cover?(state_average_percentage) && !state_score.nil? %>
        <div class="arrow-down">
          <span style="left:<%= state_average_percentage %>%"></span>
        </div>
      <% end %>
      <div class="background">
        <%= render 'ten_person_icons' %>
      </div>
      <div class="foreground rating_color_<%= score_rating %>" style="width:<%= score_percentage %>%">
        <%= render 'ten_person_icons' %>
      </div>
    </div>
  </div>
<% else
  GSLogger.error(:misc, nil, message: 'Score or rating is out of range',
                 vars: {score: score, score_rating: score_rating, score_range: range})
end %>
