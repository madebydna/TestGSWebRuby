<div class="new-api-account-form">
  <h3 class="api-form-header">Registration</h3>

  <%= form_for @user, url: post_request_api_key_new_path, method: :post do |f| %>
    <div class="col-xs-12 col-md-6">
      <%= f.text_field :first_name, class: "api-registration-field", required: true, placeholder: "First name" %>
    </div>

    <div class="col-xs-12 col-md-6">
      <%= f.text_field :last_name, class: "api-registration-field", required: true, placeholder: "Last name" %>
    </div>

    <div class="col-xs-12">
      <%= f.text_field :organization, class: "api-registration-field", required: true, placeholder: "Business name" %>
    </div>

    <div class="col-xs-12">
      <%= f.url_field :website, class: "api-registration-field", required: true, placeholder: "Website" %>
    </div>

    <div class="col-xs-12 col-md-6">
      <%= f.email_field :email, class: "api-registration-field", required: true, placeholder: "Email address" %>
    </div>

    <div class="col-xs-12 col-md-6">
      <%= f.telephone_field :phone, class: "api-registration-field", required: true, placeholder: "Phone number XXX-XXX-XXXX" %>
    </div>

    <div class="col-xs-12 col-md-6">
      <%= f.text_field :city, class: "api-registration-field", required: true, placeholder: "City" %>
    </div>

    <div class="col-xs-12 col-md-6">
      <div class="api-registration-select-container">
        <%= f.select :state, options_for_select(States.labels_hash.invert.to_a, @user.state), required: true, class: "api-registration-select", prompt: 'Select a State' %>
      </div>
    </div>

    <div id="organizations" class="col-xs-12">
      <div class="api-registration-select-container">
        <%= f.select :organization_description, options_for_select(Api::User::INDUSTRIES.map {|i| [i, i.downcase]}, selected: @user.organization_description), {class: "api-registration-select", prompt: "What best describes your business?"}, required: true %>
      </div>
        <%= f.text_field :organization_description, class: "api-registration-hidden-input-field dn", placeholder: "What best describes your business?", disabled: true, required: true %>
    </div>

    <div id="roles" class="col-xs-12">
      <div class="api-registration-select-container">
        <%= f.select :role, options_for_select(Api::User::ROLES.map {|i| [i, i.downcase]}, selected: @user.role), {class: "api-registration-select", prompt: "Select a role"}, required: true  %>
      </div>
      <%= f.text_field :role, class: "api-registration-hidden-input-field dn", placeholder: "What is your role?", disabled: true, required: true %>
    </div>

    <div id="intended-use" class="col-xs-12">
      <div class="api-registration-select-container">
        <%= f.select :intended_use, options_for_select(Api::User::INTENDED_USE.map {|i| [i, i.downcase]}, selected: @user.intended_use), {class: "api-registration-select", prompt: "How will the API be used?"}, required: true %>
      </div>
      <%= f.text_field :intended_use, class: "api-registration-hidden-input-field dn", placeholder: "What is the intended use for this?", disabled: true, required: true %>
    </div>
    <br>
    <div class="col-xs-12">
      <label>
        <%= check_box_tag nil, 0, false, class: "api-registration-checkbox tou api_tou", required: true %>
        <span>I agree to the GreatSchools <a href="<%= api_terms_of_use_path %>">Terms of Use</a></span>
      </label>
    </div>
    <div class="api-registration-submit col-xs-12">
      <%= f.submit "Submit", class: "api-registration-button" %>
    </div>
  <% end %>
</div>

<script>

  const showInputBox = (value, selectorId) => {
    const container = document.getElementById(selectorId);
    const input = container.querySelector('input');

    if (value === 'other') {
      input.disabled = false;
      input.classList.remove('dn')
      input.focus();
      input.select();

    } else {
      input.disabled = true;
      input.classList.add('dn')
    }
  }
  document.addEventListener('DOMContentLoaded', () => {
    const specialSelectSelectors = ['#organizations', '#roles', '#intended-use']
    console.log("Hello")
    specialSelectSelectors.forEach(selector => {
      const element = document.querySelector(selector);

      element.querySelector('select').addEventListener('change', (e) => {
        const container = e.currentTarget.parentElement.parentElement;
        showInputBox(e.target.value, container.id);
      })
    })
  })
</script>

