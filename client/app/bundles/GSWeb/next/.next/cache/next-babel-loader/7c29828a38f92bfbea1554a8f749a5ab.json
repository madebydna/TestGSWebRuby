{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/TestState.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import Breadcrumbs from 'react_components/breadcrumbs';\n\nimport TestStateLayout from './TestStateLayout'; // import DataModule from \"react_components/data_module\";\n// import InfoBox from 'react_components/school_profiles/info_box';\n// import SearchBox from 'react_components/search_box'\n// import Ad from 'react_components/ad';\n// import TopSchoolsStateful from './top_schools_stateful';\n// import CsaTopSchools from './csa_top_schools';\n\nimport CityBrowseLinks from './cities/CityBrowseLinks';\nimport DistrictsInState from \"./districts_in_state/DistrictsInState\"; // import RecentReviews from \"./recent_reviews\";\n// import Students from \"./students\";\n// import { init as initAdvertising } from 'util/advertising';\n// import { XS, validSizes as validViewportSizes } from 'util/viewport';\n// import Toc from './toc';\n// import { schoolsTocItem, academicsTocItem, awardWinningSchoolsTocItem, studentsTocItem, schoolDistrictsTocItem, citiesTocItem, reviewsTocItem, AWARD_WINNING_SCHOOLS, STUDENTS, SCHOOL_DISTRICTS, REVIEWS, ACADEMICS } from './toc_config';\n// import withViewportSize from 'react_components/with_viewport_size';\n// import { find as findSchools } from 'api_clients/schools';\n// import { analyticsEvent } from 'util/page_analytics';\n// import remove from 'util/array';\n// import { t, capitalize } from '../../util/i18n';\n// import QualarooDistrictLink from '../qualaroo_district_link';\n\nvar TestState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestState, _React$Component);\n\n  function TestState(props) {\n    var _this;\n\n    _classCallCheck(this, TestState);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestState).call(this, props));\n    _this.pageType = 'state';\n    return _this;\n  } // componentDidMount() {\n  //   setTimeout(() => {\n  //     initAdvertising();\n  //   }, 1000);\n  // }\n  // // school finder methods, based on obj state\n  // findTopRatedSchoolsWithReactState(newState = {}) {\n  //   return findSchools(\n  //     Object.assign(\n  //       {\n  //         city: this.props.city,\n  //         state: this.props.state,\n  //         levelCodes: this.props.levelCodes,\n  //         extras: ['students_per_teacher', 'review_summary']\n  //       },\n  //       newState\n  //     )\n  //   );\n  // }\n  // hasAcademicsData() {\n  //   let { data } = this.props.academics;\n  //   return data.filter(o => o.data && o.data.length > 0).length > 0\n  // }\n  // hasStudentDemographicData() {\n  //   const { ethnicityData, genderData, subgroupsData } = this.props.students;\n  //   const hasEthnicityData = ethnicityData.filter(o => o.state_value > 0).length > 0\n  //   const hasGenderData = genderData.Male !== undefined && genderData.Female !== undefined;\n  //   let hasSubgroupsData = false;\n  //   Object.entries(subgroupsData).forEach(([key, data]) => {\n  //     if (data.length > 0 && data[0].breakdown === 'All students' && data[0].state_value > 0) { hasSubgroupsData = true }\n  //   });\n  //   return hasEthnicityData || hasGenderData || hasSubgroupsData;\n  // }\n  // selectTocItems() {\n  //   let stateTocItems = [schoolsTocItem, awardWinningSchoolsTocItem, academicsTocItem, studentsTocItem, citiesTocItem, schoolDistrictsTocItem, reviewsTocItem];\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === AWARD_WINNING_SCHOOLS && !this.props.csa_module);\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === SCHOOL_DISTRICTS && this.props.districts.length === 0);\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === REVIEWS && this.props.reviews.length === 0);\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === STUDENTS && !this.hasStudentDemographicData());\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === ACADEMICS && !this.hasAcademicsData());\n  //   return stateTocItems;\n  // }\n\n\n  _createClass(TestState, [{\n    key: \"render\",\n    value: function render() {\n      // let { title, anchor, subtitle, info_text, icon_classes, sources, share_content, rating, data, analytics_id, showTabs, faq, feedback } = this.props.academics;\n      // const studentProps = { ...this.props.students, ...{ 'pageType': this.pageType } }\n      return React.createElement(TestStateLayout, {\n        locality: {\n          nameLong: 'Andyville'\n        },\n        schoolCount: 40,\n        districts: this.props.districts,\n        shouldDisplayDistricts: true,\n        districtsInState: React.createElement(DistrictsInState, {\n          districts: this.props.districts,\n          locality: this.props.locality,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }),\n        browseCities: React.createElement(CityBrowseLinks, {\n          community: this.pageType,\n          locality: this.props.locality // size={this.props.viewportSize}\n          ,\n          cities: this.props.cities,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }) // breadcrumbs={<Breadcrumbs items={this.props.breadcrumbs} />}\n        // viewportSize={this.props.viewportSize}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    } // render(){\n    //   <DistrictsInState\n    //     districts={this.props.districts}\n    //     locality={this.props.locality}\n    //   />\n    // }\n\n  }]);\n\n  return TestState;\n}(React.Component); // const StateWithViewportSize = withViewportSize('size')(TestState);\n\n\n_defineProperty(TestState, \"defaultProps\", {\n  schools_data: {},\n  loadingSchools: false,\n  breadcrumbs: [],\n  districts: [],\n  reviews: [],\n  cities: [],\n  csa_module: false\n});\n\n_defineProperty(TestState, \"propTypes\", {\n  schools_data: PropTypes.object,\n  districts: PropTypes.arrayOf(PropTypes.object),\n  reviews: PropTypes.arrayOf(PropTypes.object),\n  // viewportSize: PropTypes.oneOf(validViewportSizes).isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  })),\n  locality: PropTypes.object.isRequired,\n  cities: PropTypes.array,\n  schoolCount: PropTypes.number,\n  csa_module: PropTypes.bool,\n  students: PropTypes.object\n});\n\nexport default TestState;","map":{"version":3,"sources":["/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/TestState.jsx"],"names":["React","PropTypes","TestStateLayout","CityBrowseLinks","DistrictsInState","TestState","props","pageType","nameLong","districts","locality","cities","Component","schools_data","loadingSchools","breadcrumbs","reviews","csa_module","object","arrayOf","shape","text","string","isRequired","url","array","schoolCount","number","bool","students"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import Breadcrumbs from 'react_components/breadcrumbs';\nimport TestStateLayout from './TestStateLayout';\n// import DataModule from \"react_components/data_module\";\n// import InfoBox from 'react_components/school_profiles/info_box';\n// import SearchBox from 'react_components/search_box'\n// import Ad from 'react_components/ad';\n// import TopSchoolsStateful from './top_schools_stateful';\n// import CsaTopSchools from './csa_top_schools';\nimport CityBrowseLinks from './cities/CityBrowseLinks';\nimport DistrictsInState from \"./districts_in_state/DistrictsInState\";\n// import RecentReviews from \"./recent_reviews\";\n// import Students from \"./students\";\n// import { init as initAdvertising } from 'util/advertising';\n// import { XS, validSizes as validViewportSizes } from 'util/viewport';\n// import Toc from './toc';\n// import { schoolsTocItem, academicsTocItem, awardWinningSchoolsTocItem, studentsTocItem, schoolDistrictsTocItem, citiesTocItem, reviewsTocItem, AWARD_WINNING_SCHOOLS, STUDENTS, SCHOOL_DISTRICTS, REVIEWS, ACADEMICS } from './toc_config';\n// import withViewportSize from 'react_components/with_viewport_size';\n// import { find as findSchools } from 'api_clients/schools';\n// import { analyticsEvent } from 'util/page_analytics';\n// import remove from 'util/array';\n// import { t, capitalize } from '../../util/i18n';\n// import QualarooDistrictLink from '../qualaroo_district_link';\n\nclass TestState extends React.Component {\n  static defaultProps = {\n    schools_data: {},\n    loadingSchools: false,\n    breadcrumbs: [],\n    districts: [],\n    reviews: [],\n    cities: [],\n    csa_module: false\n  };\n\n  static propTypes = {\n    schools_data: PropTypes.object,\n    districts: PropTypes.arrayOf(PropTypes.object),\n    reviews: PropTypes.arrayOf(PropTypes.object),\n    // viewportSize: PropTypes.oneOf(validViewportSizes).isRequired,\n    breadcrumbs: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired\n      })\n    ),\n    locality: PropTypes.object.isRequired,\n    cities: PropTypes.array,\n    schoolCount: PropTypes.number,\n    csa_module: PropTypes.bool,\n    students: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.pageType = 'state';\n  }\n\n  // componentDidMount() {\n  //   setTimeout(() => {\n  //     initAdvertising();\n  //   }, 1000);\n  // }\n  // // school finder methods, based on obj state\n\n  // findTopRatedSchoolsWithReactState(newState = {}) {\n  //   return findSchools(\n  //     Object.assign(\n  //       {\n  //         city: this.props.city,\n  //         state: this.props.state,\n  //         levelCodes: this.props.levelCodes,\n  //         extras: ['students_per_teacher', 'review_summary']\n  //       },\n  //       newState\n  //     )\n  //   );\n  // }\n\n  // hasAcademicsData() {\n  //   let { data } = this.props.academics;\n  //   return data.filter(o => o.data && o.data.length > 0).length > 0\n  // }\n\n  // hasStudentDemographicData() {\n  //   const { ethnicityData, genderData, subgroupsData } = this.props.students;\n  //   const hasEthnicityData = ethnicityData.filter(o => o.state_value > 0).length > 0\n  //   const hasGenderData = genderData.Male !== undefined && genderData.Female !== undefined;\n  //   let hasSubgroupsData = false;\n  //   Object.entries(subgroupsData).forEach(([key, data]) => {\n  //     if (data.length > 0 && data[0].breakdown === 'All students' && data[0].state_value > 0) { hasSubgroupsData = true }\n  //   });\n  //   return hasEthnicityData || hasGenderData || hasSubgroupsData;\n  // }\n\n  // selectTocItems() {\n  //   let stateTocItems = [schoolsTocItem, awardWinningSchoolsTocItem, academicsTocItem, studentsTocItem, citiesTocItem, schoolDistrictsTocItem, reviewsTocItem];\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === AWARD_WINNING_SCHOOLS && !this.props.csa_module);\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === SCHOOL_DISTRICTS && this.props.districts.length === 0);\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === REVIEWS && this.props.reviews.length === 0);\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === STUDENTS && !this.hasStudentDemographicData());\n  //   stateTocItems = remove(stateTocItems, (tocItem) => tocItem.key === ACADEMICS && !this.hasAcademicsData());\n  //   return stateTocItems;\n  // }\n\n  render() {\n    // let { title, anchor, subtitle, info_text, icon_classes, sources, share_content, rating, data, analytics_id, showTabs, faq, feedback } = this.props.academics;\n    // const studentProps = { ...this.props.students, ...{ 'pageType': this.pageType } }\n    return (\n      <TestStateLayout\n        locality={\n          { nameLong: 'Andyville' }\n        }\n        schoolCount={40}\n        districts={this.props.districts}\n        shouldDisplayDistricts={true}\n        districtsInState={\n          <DistrictsInState\n            districts={this.props.districts}\n            locality={this.props.locality}\n          />\n        }\n        browseCities={\n          <CityBrowseLinks\n            community={this.pageType}\n            locality={this.props.locality}\n            // size={this.props.viewportSize}\n            cities={this.props.cities}\n          />\n        }\n      // breadcrumbs={<Breadcrumbs items={this.props.breadcrumbs} />}\n      // viewportSize={this.props.viewportSize}\n      >\n      </TestStateLayout>\n    );\n  }\n\n  // render(){\n  //   <DistrictsInState\n  //     districts={this.props.districts}\n  //     locality={this.props.locality}\n  //   />\n  // }\n}\n\n// const StateWithViewportSize = withViewportSize('size')(TestState);\n\nexport default TestState;\n"]},"metadata":{},"sourceType":"module"}