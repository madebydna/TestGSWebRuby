{"ast":null,"code":"var _jsxFileName = \"/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/cities/CityBrowseLinks.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // import { validSizes as validViewportSizes } from \"util/viewport\";\n\nimport CityLinks from \"./CityLinks\"; // import { t } from \"util/i18n\";\n\nvar cityBrowseLinks = function cityBrowseLinks(_ref) {\n  var locality = _ref.locality,\n      size = _ref.size,\n      cities = _ref.cities;\n  var browseSchoolBlurb = React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Cities\");\n  console.log(cities);\n  return React.createElement(\"section\", {\n    className: \"links-module\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, browseSchoolBlurb, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(CityLinks, {\n    cities: cities,\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"separator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"blue-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"more-school-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: locality.citiesBrowseUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Browse More\"))));\n};\n\ncityBrowseLinks.propTypes = {\n  locality: PropTypes.object.isRequired,\n  // size: PropTypes.oneOf(validViewportSizes).isRequired,\n  community: PropTypes.string.isRequired,\n  cities: PropTypes.array\n};\ncityBrowseLinks.defaultProps = {\n  cities: []\n};\nexport default cityBrowseLinks;","map":{"version":3,"sources":["/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/cities/CityBrowseLinks.jsx"],"names":["React","PropTypes","CityLinks","cityBrowseLinks","locality","size","cities","browseSchoolBlurb","console","log","citiesBrowseUrl","propTypes","object","isRequired","community","string","array","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAgC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAEtD,MAAMC,iBAAiB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,QAAL,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,iBADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAED,MAAnB;AAA2B,IAAA,IAAI,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAED,QAAQ,CAACM,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,aAAT,CADF,CADF,CARF,CADF;AAgBD,CApBD;;AAsBAP,eAAe,CAACQ,SAAhB,GAA4B;AAC1BP,EAAAA,QAAQ,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADD;AAE1B;AACAC,EAAAA,SAAS,EAAEb,SAAS,CAACc,MAAV,CAAiBF,UAHF;AAI1BP,EAAAA,MAAM,EAAEL,SAAS,CAACe;AAJQ,CAA5B;AAOAb,eAAe,CAACc,YAAhB,GAA+B;AAC7BX,EAAAA,MAAM,EAAE;AADqB,CAA/B;AAIA,eAAeH,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { validSizes as validViewportSizes } from \"util/viewport\";\nimport CityLinks from \"./CityLinks\";\n// import { t } from \"util/i18n\";\n\nconst cityBrowseLinks = ({ locality, size, cities }) => {\n\n  const browseSchoolBlurb = <h3>{\"Cities\"}</h3>;\n  console.log(cities)\n  return (\n    <section className=\"links-module\">\n      {browseSchoolBlurb}\n      <ul>\n        <CityLinks cities={cities} size={size} />\n      </ul>\n      <div className=\"separator\">\n        <div className=\"blue-line\" />\n      </div>\n      <div className=\"more-school-btn\">\n        <a href={locality.citiesBrowseUrl}>\n          <button>{\"Browse More\"}</button>\n        </a>\n      </div>\n    </section>\n  );\n}\n\ncityBrowseLinks.propTypes = {\n  locality: PropTypes.object.isRequired,\n  // size: PropTypes.oneOf(validViewportSizes).isRequired,\n  community: PropTypes.string.isRequired,\n  cities: PropTypes.array\n};\n\ncityBrowseLinks.defaultProps = {\n  cities: []\n};\n\nexport default cityBrowseLinks;"]},"metadata":{},"sourceType":"module"}