{"ast":null,"code":"var _jsxFileName = \"/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/districts_in_state/DistrictsInState.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // import { t } from \"util/i18n\";\n// import { copyParam } from 'util/uri';\n\nvar districtLink = function districtLink(link) {\n  return link;\n};\n\nvar DistrictsInState = function DistrictsInState(_ref) {\n  var districts = _ref.districts,\n      _ref$locality = _ref.locality,\n      locality = _ref$locality === void 0 ? {} : _ref$locality;\n  console.log(districts);\n  var districtItems = districts.map(function (district, idx) {\n    return React.createElement(\"li\", {\n      key: district.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: districtLink(district.url),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, district.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, district.enrollment ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, district.enrollment.toLocaleString(), \" \", 'Students', React.createElement(\"span\", {\n      className: \"display-desktop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" | \")) : null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, district.city, \", \", district.state), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Grades\", \": \", district.grades, \" | \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, district.numSchools.toLocaleString(), \" \", district.numSchools === 1 ? 'school' : 'schools')), idx !== districts.length - 1 ? React.createElement(\"div\", {\n      className: \"blue-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }) : null);\n  });\n  return React.createElement(\"section\", {\n    className: \"districts-in-state-module\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, districtItems), React.createElement(\"div\", {\n    className: \"blue-line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nDistrictsInState.propTypes = {\n  districts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  locality: PropTypes.object.isRequired\n};\nDistrictsInState.defaultProps = {\n  districts: []\n};\nexport default DistrictsInState;","map":{"version":3,"sources":["/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/districts_in_state/DistrictsInState.jsx"],"names":["React","PropTypes","districtLink","link","DistrictsInState","districts","locality","console","log","districtItems","map","district","idx","name","url","enrollment","toLocaleString","city","state","grades","numSchools","length","propTypes","arrayOf","object","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,SACnBA,IADmB;AAAA,CAArB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkC;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,2BAApBC,QAAoB;AAAA,MAApBA,QAAoB,8BAAT,EAAS;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,MAAMI,aAAa,GAAGJ,SAAS,CAACK,GAAV,CAAc,UAACC,QAAD,EAAWC,GAAX;AAAA,WAClC;AAAI,MAAA,GAAG,EAAED,QAAQ,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAEX,YAAY,CAACS,QAAQ,CAACG,GAAV,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCH,QAAQ,CAACE,IAA/C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACI,UAAT,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,QAAQ,CAACI,UAAT,CAAoBC,cAApB,EAAP,OAA8C,UAA9C,EAAyD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzD,CAAtB,GAAqI,IADxI,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOL,QAAQ,CAACM,IAAhB,QAAwBN,QAAQ,CAACO,KAAjC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,QAAP,QAAmBP,QAAQ,CAACQ,MAA5B,QAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,QAAQ,CAACS,UAAT,CAAoBJ,cAApB,EAAP,OAA8CL,QAAQ,CAACS,UAAT,KAAwB,CAAxB,GAA4B,QAA5B,GAAuC,SAArF,CALF,CAFF,EASGR,GAAG,KAAKP,SAAS,CAACgB,MAAV,GAAmB,CAA3B,GAA+B;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,GAA+D,IATlE,CADkC;AAAA,GAAd,CAAtB;AAaA,SACE;AAAS,IAAA,SAAS,EAAC,2BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,aADH,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAeD,CA9BD;;AAgCAL,gBAAgB,CAACkB,SAAjB,GAA6B;AAC3BjB,EAAAA,SAAS,EAAEJ,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UADpB;AAE3BnB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,MAAV,CAAiBC;AAFA,CAA7B;AAKArB,gBAAgB,CAACsB,YAAjB,GAAgC;AAC9BrB,EAAAA,SAAS,EAAE;AADmB,CAAhC;AAKA,eAAeD,gBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { t } from \"util/i18n\";\n// import { copyParam } from 'util/uri';\n\nconst districtLink = (link) => (\n  link\n);\n\nconst DistrictsInState = ({ districts, locality = {} }) => {\n  console.log(districts)\n  const districtItems = districts.map((district, idx) => (\n    <li key={district.name}>\n      <a href={districtLink(district.url)}>{district.name}</a>\n      <div>\n        {district.enrollment ? <span>{district.enrollment.toLocaleString()} {'Students'}<span className=\"display-desktop\"> | </span></span> : null}\n        <span>{district.city}, {district.state}</span>\n        <br />\n        <span>{\"Grades\"}: {district.grades} | </span>\n        <span>{district.numSchools.toLocaleString()} {district.numSchools === 1 ? 'school' : 'schools'}</span>\n      </div>\n      {idx !== districts.length - 1 ? <div className=\"blue-line\" /> : null}\n    </li>\n  ));\n  return (\n    <section className=\"districts-in-state-module\">\n      <ul>\n        {districtItems}\n      </ul>\n\n      <div className=\"blue-line\" />\n\n      {/* <div className=\"more-school-btn\">\n        <a href={locality.districtsBrowseUrl}>\n          <button>{\"More Button\"}</button>\n        </a>\n      </div> */}\n    </section>\n  )\n}\n\nDistrictsInState.propTypes = {\n  districts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  locality: PropTypes.object.isRequired\n};\n\nDistrictsInState.defaultProps = {\n  districts: []\n};\n\n\nexport default DistrictsInState;\n\n"]},"metadata":{},"sourceType":"module"}