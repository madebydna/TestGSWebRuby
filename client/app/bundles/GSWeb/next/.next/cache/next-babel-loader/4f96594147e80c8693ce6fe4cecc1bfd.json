{"ast":null,"code":"var _jsxFileName = \"/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/cities/CityLinks.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // import { MD, validSizes as validViewportSizes } from \"util/viewport\";\n\nvar renderCitiesListItem = function renderCitiesListItem(linkData) {\n  return React.createElement(\"a\", {\n    href: linkData.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, linkData.name);\n};\n\nvar cityLinks = function cityLinks(_ref) {\n  var size = _ref.size,\n      cities = _ref.cities;\n  var renderedList = cities.map(function (linkData, idx) {\n    return React.createElement(\"li\", {\n      key: linkData.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, renderCitiesListItem(linkData), renderBlueLine(idx, cities.length, size));\n  });\n  return renderedList;\n}; // large screens display cities in two cols with 4 cities each\n\n\nvar renderBlueLine = function renderBlueLine(idx, num_cities, size) {\n  var notLast = idx !== num_cities - 1; // const twoCol = size > MD;\n\n  var twoCol = true;\n  var lastInFirstCol = idx == 3;\n\n  if (notLast && !(twoCol && lastInFirstCol)) {\n    return React.createElement(\"div\", {\n      className: \"blue-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n};\n\ncityLinks.propTypes = {\n  cities: PropTypes.array // size: PropTypes.oneOf(validViewportSizes).isRequired\n\n};\nexport default cityLinks;","map":{"version":3,"sources":["/Users/aluo/Development/GSWebRuby/client/app/bundles/GSWeb/next/components/cities/CityLinks.jsx"],"names":["React","PropTypes","renderCitiesListItem","linkData","url","name","cityLinks","size","cities","renderedList","map","idx","renderBlueLine","length","num_cities","notLast","twoCol","lastInFirstCol","propTypes","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD;AAAA,SAC3B;AAAG,IAAA,IAAI,EAAEA,QAAQ,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,QAAQ,CAACE,IAAjC,CAD2B;AAAA,CAA7B;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAsB;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACtC,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAW,UAACP,QAAD,EAAWQ,GAAX;AAAA,WAC9B;AAAI,MAAA,GAAG,EAAER,QAAQ,CAACE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,oBAAoB,CAACC,QAAD,CADvB,EAEGS,cAAc,CAACD,GAAD,EAAMH,MAAM,CAACK,MAAb,EAAqBN,IAArB,CAFjB,CAD8B;AAAA,GAAX,CAArB;AAMA,SAAOE,YAAP;AACD,CARD,C,CAUA;;;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACD,GAAD,EAAMG,UAAN,EAAkBP,IAAlB,EAA2B;AAChD,MAAMQ,OAAO,GAAGJ,GAAG,KAAMG,UAAU,GAAG,CAAtC,CADgD,CAEhD;;AACA,MAAME,MAAM,GAAG,IAAf;AACA,MAAMC,cAAc,GAAGN,GAAG,IAAI,CAA9B;;AACA,MAAII,OAAO,IAAI,EAAEC,MAAM,IAAIC,cAAZ,CAAf,EAA4C;AAC1C,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD;AACF,CARD;;AAUAX,SAAS,CAACY,SAAV,GAAsB;AACpBV,EAAAA,MAAM,EAAEP,SAAS,CAACkB,KADE,CAEpB;;AAFoB,CAAtB;AAKA,eAAeb,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { MD, validSizes as validViewportSizes } from \"util/viewport\";\n\nconst renderCitiesListItem = (linkData) => (\n  <a href={linkData.url}>{linkData.name}</a>\n);\n\nconst cityLinks = ({ size, cities }) => {\n  const renderedList = cities.map((linkData, idx) => (\n    <li key={linkData.name}>\n      {renderCitiesListItem(linkData)}\n      {renderBlueLine(idx, cities.length, size)}\n    </li>\n  ));\n  return renderedList;\n}\n\n// large screens display cities in two cols with 4 cities each\nconst renderBlueLine = (idx, num_cities, size) => {\n  const notLast = idx !== (num_cities - 1);\n  // const twoCol = size > MD;\n  const twoCol = true;\n  const lastInFirstCol = idx == 3;\n  if (notLast && !(twoCol && lastInFirstCol)) {\n    return (<div className=\"blue-line\" />);\n  }\n}\n\ncityLinks.propTypes = {\n  cities: PropTypes.array,\n  // size: PropTypes.oneOf(validViewportSizes).isRequired\n}\n\nexport default cityLinks;"]},"metadata":{},"sourceType":"module"}